/ Link to the "Previous" page
/   - available local variables
/     url:           url to the previous page
/     current_page:  a page object for the currently displayed page
/     total_pages:   total number of pages
/     per_page:      number of items to fetch per page
/     remote:        data-remote

- content_for :prev_page do
  i.fa.fa-arrow-left>
  => t('views.pagination.previous').html_safe

/ span.prev.btn.btn-light class="#{'disabled' if current_page.first?}"
/   == link_to_unless current_page.first?, content_for(:prev_page), url, rel: 'prev', remote: remote


span.prev
  = link_to_unless current_page.first?, content_for(:prev_page), url, rel: 'prev', remote: remote, class: "btn btn-secondary mr-1"