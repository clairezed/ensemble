= f.hm_form_errors

.form-group.required
  = f.label :firstname, class: ''
  = f.text_field :firstname, class: 'form-control'
  
.form-group.required
  = f.label :lastname, class: ''
  = f.text_field :lastname, class: 'form-control'

.form-group
  = label_tag :avatar, nil, class: '' do
    => icon_camera
    ' Photo de profil

  .picture-card_container
    div.picture-card_container--avatar data-is-upload-anchor="true"
      - avatar = f.object.avatar
      - if avatar.present? && !avatar.new_record?
        .picture-card data-is-download="#{avatar.id}"
          .picture-card_image
            = link_to avatar.asset(:original), target: "_blank" do
              => image_tag avatar.asset(:thumb), class: "img-fluid"
          = link_to users_avatar_path(avatar.id), method: :delete, remote: true, class: "picture-card_delete-btn", data:{delete_picture: avatar.id, confirm: "Confirmer la suppression ?"} do
            => icon_delete_reverse
            ' supp

    .picture-card
      = label_tag :"asset_user_avatar[asset]"
        span.button-upload
          = icon_edit
        = file_field_tag :"asset_user_avatar[asset]", accept: Asset::UserAvatar::VALID_CONTENT_TYPES.map(&:to_s).join(','), data: {file_upload: true, url: users_avatars_path}, class:'d-none'

.form-group.required
  = f.label :gender, class: '' do
    ' Sexe
  .gender-icon-radio
    - User.genders.each do |key, value|
      .form-check.form-check-inline
        label.form-check-label
          => f.radio_button :gender, key, class: "form-check-input hidden-error"
          = user_gender_icon(key)
  
.form-group.required
  = f.label :birthdate, class: '' do
    => icon_calendar
    ' Né.e le
  .input-group
    = f.text_field :birthdate, class: 'form-control', data: {date_picker: 'birthdate'}, placeholder: "jj/mm/aaaa"
    div.input-group-append data-toggle-picker=''
      span.input-group-text
        = icon_calendar

.form-group
  = f.label :leisures, class: '' do
    => icon_interest
    ' Loisirs
  - LeisureCategory.all.order(created_at: :asc).includes(:leisures).each_slice(4) do |leisure_category_row|

    / Leisure categories ----------------------------
    .row.sm-gutter.leisure-category-row
      - leisure_category_row.each do |leisure_category|
        .col-3.sm-gutter.leisure-category_card-wrapper
          / = f.check_box :leisure_category_ids, {multiple: true, class: ""}, leisure_category.id, nil
          = f.label "leisure_category_ids_#{leisure_category.id}", class: "leisure-category_card", data: {leisure_category: leisure_category.id} do
            span.ico> class="ico-#{leisure_category.key}"
              - (1..15).each do |i|
                span class="path#{i}"
            .leisure-category_card-label=> leisure_category.title

    / Leisures ----------------------------
    - leisure_category_row.each do |leisure_category|
      .leisure-row data-leisure-row="#{leisure_category.id}"
        .leisure-row_inner
          .row.sm-gutter
            - leisure_category.leisures.each do |leisure|
              .col-6.sm-gutter
                .leisure_block
                  = f.check_box :leisure_ids, {multiple: true, class: "", data: {is_leisure_input: true}}, leisure.id, nil
                  = f.label "leisure_ids_#{leisure.id}", class: "leisure_choice" do
                    span.ico> class="ico-#{leisure.key}"
                      - (1..30).each do |i|
                        span class="path#{i}"
                    .leisure_choice-label=> leisure.title
        .footer
          a.button--main data-toggle-up="#{leisure_category.id}"
            i.fa.fa-check>
            ' OK



.form-group.required
  = f.label :city_id, class: '' do
    => icon_location
    ' Ville
  = f.select :city_id, options_for_select(single_city_options(f.object.city), f.object.city_id), {prompt: "Rechercher votre ville"}, class: "form-control",  data: {is_ajax_select2: 'city', path: cities_path}

.form-group
  = f.label :visited_countries, class: '' do
    => icon_country
    ' Pays visités
  = f.text_area :visited_countries, class: 'form-control'
  
.form-group
  = f.label :language_ids, class: '' do
    => icon_language
    ' Langues parlées
  = f.select :language_ids, options_for_select(language_options, f.object.language_ids), {prompt: "Sélectionnez vos langues"}, multiple: true, class: "form-control",  data: {is_select2: 'languages'}

  / Pays visités

.form-group
  = f.label :description, class: '' do
    => icon_edit
    ' Quelques mots sur moi
  = f.text_area :description, class: 'form-control'

= render "events/event_pictures/hb_thumbs"

coffee:
  new ProfileEdit()
