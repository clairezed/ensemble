= f.hm_form_errors

  
.form-group.required
  = f.label :title, class: '' do
    i.fa.fa-pencil>
    ' Titre
  = f.text_field :title, class: 'form-control'

/ centre d interet
.form-group.required
  = f.label :leisure_category_id do
    i.fa.fa-users>
    ' Centre d'intérêt
  .row
    - LeisureCategory.all.each do |lc|
      .col-4
        .form-check.form-check-inline
          label.form-check-label
            => f.radio_button :leisure_category_id, lc.id, class: "form-check-input"
            => lc.title

  
.form-group.required
  = f.label :start_at, class: '' do
    i.fa.fa-calendar>
    ' Date de début
  .form-row
    .col-6
      = f.text_field :start_date, class: 'form-control', data: {date_picker: 'start'}, placeholder: "jj/mm/aaaa"
    .col-6
      = f.text_field :start_time, class: 'form-control', data: {time_picker: 'start'}, placeholder: "hh:mm"
  
.form-group
  = f.label :end_at, class: '' do
    i.fa.fa-calendar>
    ' Date de fin
  .form-row
    .col-6
      = f.text_field :end_date, class: 'form-control', data: {date_picker: 'end'}, placeholder: "jj/mm/aaaa"
    .col-6
      = f.text_field :end_time, class: 'form-control', data: {time_picker: 'end'}, placeholder: "hh:mm"

.form-group
  = f.label :address, class: '' do
    i.fa.fa-map-marker>
    ' Adresse
  = f.text_field :address, class: 'form-control'

.form-group.required
  = f.label :city_id, class: '' do
    i.fa.fa-map-marker>
    ' Ville
  = f.select :city_id, options_for_select(single_city_options(f.object.city), f.object.city_id), {prompt: "Rechercher votre ville"}, class: "form-control",  data: {is_ajax_select2: 'city', path: cities_path, width: '100%'}

.form-group
  = f.label :description, class: '' do
    i.fa.fa-pencil>
    ' Description
  = f.hidden_field :description, class: 'form-control', data: {is_hidden_field: 'description'}
  div data-is-wysiwyg="quill"
    p= wysiwyg_text(f.object.description)

/ Nb de personnes

.form-group
  = label_tag :participants do
    i.fa.fa-users>
    ' Nombre de participants
  = text_field_tag :participants, [f.object.participants_min, f.object.participants_max].join(' - '), data: {is_slider: 'participants'}
  = f.hidden_field :participants_min, data: {is_participants: 'min'}
  = f.hidden_field :participants_max, data: {is_participants: 'max'}


/ Photos
.form-group
  / .label-title  Photos de l'événement
  = f.label :pictures do
    i.fa.fa-camera>
    ' Photos de l'événement
  p.form-text.text-muted.small: em 
    ' Formats autorisés : .pdf, .jpeg, .png
    br
    ' Taille maximum : 8 Mo

- if f.object.new_record? 
  p Vous pourrez ajouter des photos une fois que votre événement sera créé
- else

  .picture-card_container data-is-upload-anchor=true data-list-url="#{users_event_pictures_path(f.object)}"

    .picture-card
      = label_tag :"asset_event_picture[asset]"
        span.button-upload
          i.fa.fa-plus-circle

        = file_field_tag :"asset_event_picture[asset]", accept: Asset::EventPicture::VALID_CONTENT_TYPES.map(&:to_s).join(','), data: {file_upload: true, url: users_event_pictures_path(f.object)}, class:'d-none'
        / / filtre "accept" mal géré pour certains navigateurs (dont le mien pour les doc, xls, etc)
        / = file_field_tag :"asset_event_picture[asset]", accept: Asset::EventPicture::VALID_CONTENT_TYPES.map(&:to_s).join(','), data: {file_upload: true, url: event_pictures_path(f.object), method: 'POST', type: 'script'}, style: "display:none"


.form-group.required
  .row
    - Event.visibilities.each do |key, value|
      .col
        => f.radio_button :visibility, key, class: "d-none button-radio-input"
        = f.label :visibility, value: key, class: "button-radio" do
          i.fa> class="#{event_openess_icon(key)}"
          span.label-title=> event_visibility(key)

= render "events/event_pictures/hb_thumbs"

coffee:
  new EventForm()