= f.hm_form_errors

.form-group.required
  = f.label :firstname, class: ''
  = f.text_field :firstname, class: 'form-control'
  
.form-group.required
  = f.label :lastname, class: ''
  = f.text_field :lastname, class: 'form-control'

.form-group
  = label_tag :avatar, nil, class: '' do
    i.fa.fa-camera>
    ' Photo de profil

  .picture-card_container
    div.picture-card_container--avatar data-is-upload-anchor="true"
      - avatar = f.object.avatar
      - if avatar.present? && !avatar.new_record?
        .picture-card data-is-download="#{avatar.id}"
          .picture-card_image
            = link_to avatar.asset(:original), target: "_blank" do
              => image_tag avatar.asset(:thumb), class: "img-fluid"
          = link_to users_avatar_path(avatar.id), method: :delete, remote: true, class: "picture-card_delete-btn", data:{delete_picture: avatar.id, confirm: "Confirmer la suppression ?"} do
            i.fa.fa-times-circle-o>
            ' supp

    .picture-card
      = label_tag :"asset_user_avatar[asset]"
        span.button-upload
          i.fa.fa-pencil
        = file_field_tag :"asset_user_avatar[asset]", accept: Asset::UserAvatar::VALID_CONTENT_TYPES.map(&:to_s).join(','), data: {file_upload: true, url: users_avatars_path}, class:'d-none'

.form-group.required
  = f.label :gender, class: '' do
    ' Sexe
  .gender-icon-radio
    - User.genders.each do |key, value|
      .form-check.form-check-inline
        label.form-check-label
          => f.radio_button :gender, key, class: "form-check-input hidden-error"
          i> class="fa #{user_gender_icon(key)}"
  
.form-group.required
  = f.label :birthdate, class: '' do
    i.fa.fa-birthday-cake>
    ' Né.e le
  .input-group
    = f.text_field :birthdate, class: 'form-control', data: {date_picker: 'birthdate'}, placeholder: "jj/mm/aaaa"
    a.input-group-addon data-toggle-picker=''
     i.fa.fa-calendar

.form-group
  = f.label :leisures, class: '' do
    i.fa.fa-users>
    ' Centres d'intérêt
  .row
    - LeisureCategory.all.includes(:leisures).each do |leisure_category|
      .col-4
        .form-check.form-check-inline
          label.form-check-label
            => f.check_box :leisure_category_ids, {multiple: true, class: "form-check-input"}, leisure_category.id, nil
            => leisure_category.title
            - leisure_category.leisures.each do |leisure|
              .form-check.form-check-inline
                label.form-check-label
                  => f.check_box :leisure_ids, {multiple: true, class: "form-check-input"}, leisure.id, nil
                  => leisure.title


.form-group.required
  = f.label :city_id, class: '' do
    i.fa.fa-map-marker>
    ' Ville
  = f.select :city_id, options_for_select(single_city_options(f.object.city), f.object.city_id), {prompt: "Rechercher votre ville"}, class: "form-control",  data: {is_ajax_select2: 'city', path: cities_path}

.form-group
  = f.label :language_ids, class: '' do
    i.fa.fa-language>
    ' Langues parlées
  = f.select :language_ids, options_for_select(language_options, f.object.language_ids), {prompt: "Sélectionnez vos langues"}, multiple: true, class: "form-control",  data: {is_select2: 'languages'}

  / Pays visités

.form-group
  = f.label :description, class: '' do
    i.fa.fa-pencil>
    ' Présentation
  = f.text_area :description, class: 'form-control'

= render "events/event_pictures/hb_thumbs"

coffee:
  new ProfileEdit()
