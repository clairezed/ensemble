= f.hm_form_errors

  
.form-group.required
  = f.label :title, class: ''
  = f.text_field :title, class: 'form-control'

/ centre d interet

- LeisureCategory.all.each do |lc|
  .form-check.form-check-inline
    label.form-check-label
      => f.radio_button :leisure_category_id, lc.id, class: "form-check-input"
      => lc.title

  
.form-group.required
  = f.label :start_at, class: ''
  .form-row
    .col-auto
      = f.text_field :start_date, class: 'form-control', data: {date_picker: 'start'}, placeholder: "jj/mm/aaaa"
    .col-auto
      = f.text_field :start_time, class: 'form-control', data: {time_picker: 'start'}, placeholder: "hh:mm"
  
.form-group
  = f.label :end_at, class: ''
  .form-row
    .col-auto
      = f.text_field :end_date, class: 'form-control', data: {date_picker: 'end'}, placeholder: "jj/mm/aaaa"
    .col-auto
      = f.text_field :end_time, class: 'form-control', data: {time_picker: 'end'}, placeholder: "hh:mm"

.form-group
  = f.label :address, class: ''
  = f.text_field :address, class: 'form-control'

.form-group.required
  = f.label :city_id, class: ''
  = f.select :city_id, options_for_select(single_city_options(f.object.city), f.object.city_id), {prompt: "Rechercher votre ville"}, class: "form-control",  data: {is_ajax_select2: 'city', path: cities_path}

.form-group
  = f.label :description, class: ''
  = f.hidden_field :description, class: 'form-control', data: {is_hidden_field: 'description'}
  div data-is-wysiwyg="quill"
    p= wysiwyg_text(f.object.description)

/ Nb de personnes

.form-group
  = label_tag :participants, "Nombre de participants"
  = text_field_tag :participants, [f.object.participants_min, f.object.participants_max].join(' - '), data: {is_slider: 'participants'}
  = f.hidden_field :participants_min, data: {is_participants: 'min'}
  = f.hidden_field :participants_max, data: {is_participants: 'max'}


/ Photos
div class=""
  .label-title  Photos de l'événement
  p.form-text.text-muted.small: em 
    ' Formats autorisés : .pdf, .jpeg, .png
    br
    ' Taille maximum : 8 Mo

- if f.object.new_record? 
  p Vous pourrez ajouter des photos une fois que votre événement sera créé
- else

  div.item-list.row data-is-media-list=true data-list-url="#{users_event_pictures_path(f.object)}"

    .col-4
      = label_tag :"asset_event_picture[asset]"
        span.btn.btn-primary
          | Ajouter
        = file_field_tag :"asset_event_picture[asset]", accept: Asset::EventPicture::VALID_CONTENT_TYPES.map(&:to_s).join(','), data: {file_upload: true, url: users_event_pictures_path(f.object)}, class:'d-none'
        / / filtre "accept" mal géré pour certains navigateurs (dont le mien pour les doc, xls, etc)
        / = file_field_tag :"asset_event_picture[asset]", accept: Asset::EventPicture::VALID_CONTENT_TYPES.map(&:to_s).join(','), data: {file_upload: true, url: event_pictures_path(f.object), method: 'POST', type: 'script'}, style: "display:none"


.form-group.required
  br
  - Event.visibilities.each do |key, value|
    .form-check.form-check-inline
      label.form-check-label
        => f.radio_button :visibility, key, class: "form-check-input"
        => event_visibility(key)

= render "events/event_pictures/hb_thumbs"

coffee:
  new EventForm()